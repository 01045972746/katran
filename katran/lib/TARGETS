cpp_library(
    name = "bpfadapter",
    srcs = [
        "BpfAdapter.cpp",
        "BpfLoader.cpp",
        "linux_includes/libbpf.c",
    ],
    headers = [
        "BpfAdapter.h",
        "BpfLoader.h",
        "BpfLoaderStructs.h",
        "linux_includes/bpf.h",
        "linux_includes/bpf_common.h",
        "linux_includes/bpf_helpers.h",
        "linux_includes/libbpf.h",
    ],
    deps = [
        "//folly:scope_guard",
    ],
    external_deps = [
        "glog",
        ("libelf", "any", "elf"),
        ("libmnl", None, "mnl"),
    ],
)

cpp_library(
    name = "iphelpers",
    srcs = [
        "IpHelpers.cpp",
    ],
    headers = [
        "IpHelpers.h",
    ],
    deps = [
        "//folly:network_address",
        "//folly/lang:bits",
    ],
)

cpp_library(
    name = "chhelpers",
    srcs = [
        "CHHelpers.cpp",
    ],
    headers = [
        "CHHelpers.h",
    ],
    deps = [
        ":murmurhash3",
    ],
)

cpp_library(
    name = "libkatran",
    srcs = [
        "KatranLb.cpp",
        "Vip.cpp",
    ],
    headers = [
        "KatranLb.h",
        "KatranLbStructs.h",
        "Vip.h",
    ],
    deps = [
        ":balancer_structs",
        ":bpfadapter",
        ":chhelpers",
        ":iphelpers",
        "//folly:format",
        "//folly:network_address",
        "//folly/lang:bits",
    ],
    external_deps = [
        "gflags",
        "glog",
    ],
)

cpp_library(
    name = "balancer_structs",
    headers = [
        "BalancerStructs.h",
    ],
)

cpp_library(
    name = "murmurhash3",
    srcs = [
        "MurmurHash3.cpp",
    ],
    headers = [
        "MurmurHash3.h",
    ],
)

cpp_library(
    name = "machelpers",
    srcs = [
        "MacHelpers.cpp",
    ],
    headers = [
        "MacHelpers.h",
    ],
    deps = [
        "//folly:format",
        "//folly:network_address",
    ],
)

cpp_binary(
    name = "xdproot",
    srcs = [
        "xdproot.cpp",
    ],
    deps = [
        ":bpfadapter",
    ],
    external_deps = [
        "gflags",
        "glog",
    ],
)

cpp_binary(
    name = "maglev_integration_test",
    srcs = [
        "maglev_integration_test.cpp",
    ],
    deps = [
        ":chhelpers",
    ],
    external_deps = [
        "gflags",
    ],
)
